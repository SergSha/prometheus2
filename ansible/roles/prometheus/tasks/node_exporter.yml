---
# tasks file for prometheus

- name: Node_exporter | create node_exporter system group
  group:
    name: node_exporter
    system: true
    state: present

- name: Node_exporter | create node_exporter system user
  user:
    name: node_exporter
    system: true
    shell: "/bin/false"
    group: node_exporter
    createhome: false
#    home: "{{ node_exporter_db_dir }}"

- name: Node_exporter | download node_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
#        checksum: "sha256:{{ __prometheus_checksum }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  # run_once: true # <-- this cannot be set due to multi-arch support
  delegate_to: localhost
  check_mode: false

- name: Node_exporter | unpack node_exporter binaries
  become: false
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/"
  delegate_to: localhost
  check_mode: false

- name: Node_exporter | propagate official node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/{{ item }}"
    dest: "/usr/local/bin/"
    mode: 0755
    owner: node_exporter
    group: node_exporter
  loop:
    - node_exporter

- name: Node_exporter | create node_exporter systemd service unit
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
    owner: root
    group: root
    mode: 0644

- name: Node_exporter | ensure node_exporter service is started and enabled
  systemd:
    daemon_reload: true
    name: node_exporter
    state: restarted
    enabled: true




# - name: Install SELinux dependencies
  # package:
    # name: "{{ item }}"
    # state: present
  # with_items: "{{ prometheus_selinux_packages }}"
  # register: _install_packages
  # until: _install_packages is succeeded
  # retries: 5
  # delay: 2
  # when:
    # - ansible_version.full is version('2.4', '>=')
    # - ansible_selinux.status == "enabled"

# - name: Allow node_exporter to bind to port in SELinux
  # seport:
    # ports: "{{ prometheus_web_listen_address.split(':')[1] }}"
    # proto: tcp
    # setype: http_port_t
    # state: present
  # when:
    # - ansible_version.full is version('2.4', '>=')
    # - ansible_selinux.status == "enabled"